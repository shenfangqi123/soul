// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        Effect_Ratio: { value: 0.5 }
        Effect_Position: { value: [1, 1] }
        center: { value: [0.5, 0.5] }
        Effect_Size: { value: 0.25 }
        Width_Scale: { value: 0.66 }
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%



CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  uniform GDG_Input {
    vec2 Effect_Position;
    vec2 center;
    float Effect_Ratio;
    float Effect_Size;
    float Width_Scale;  
  };

  void main () {
    vec4 o = vec4(1, 1, 1, 1);
    vec4 c = v_color * texture2D(texture, v_uv0);

    float dis = sqrt((v_uv0.x-center.x)*(v_uv0.x-center.x)+(v_uv0.y-center.y)*(v_uv0.y-center.y));

    if( dis > 0.2) {
        o = vec4(c);
    } else {
        o = vec4(0, 0, 0, 0);
        //o.a = smoothstep(-0.2, 0.2, dis); 
        o.a = dis * 10.0;
    }


    gl_FragColor = o; 

  }
}%
